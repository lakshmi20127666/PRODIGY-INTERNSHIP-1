<!DOCTYPE html>
<html lang="en">
<head> 
<meta charset="UTF-8"> 
<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
<title>Stopwatch</title> 
<link rel="stylesheet" href="styles.css"> 
</head> 
<body> 
<div class="stopwatch"> 
<div id="display">00:00:00</div>
<button id="startPauseBtn">Start</button>
<button id="resetBtn">Reset</button>
</div> 
<script src="script.js"></script> 
</body> 
</html>
body { 
display: flex;
justify-content: center;
align-items: center; 
height: 100vh; 
background-color: #f0f0f0;
font-family: Arial, sans-serif;
}
.stopwatch { 
text-align: center;
}
#display { 
font-size: 3em; 
margin-bottom: 20px; 
}
button { 
font-size: 1em;
padding: 10px 20px;
margin: 5px;
cursor: pointer; 
}
let startTime, updatedTime, difference, tInterval;
let running = false; 
const display = document.getElementById('display');
const startPauseBtn = document.getElementById('startPauseBtn');
const resetBtn = document.getElementById('resetBtn');
startPauseBtn.addEventListener('click', startPause);
resetBtn.addEventListener('click', reset); 
function startPause() { 
if (!running) { 
startTime = new Date().getTime() - (difference || 0);
tInterval = setInterval(updateTime, 10);
startPauseBtn.textContent = 'Pause'; 
running = true; 
}
else {
clearInterval(tInterval); 
startPauseBtn.textContent = 'Start'; 
running = false;
}
} 
function reset() { 
clearInterval(tInterval);
difference = 0;
running = false;
display.textContent = '00:00:00'; 
startPauseBtn.textContent = 'Start'; 
}
function updateTime() {
updatedTime = new Date().getTime(); 
difference = updatedTime - startTime;
let minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
let seconds = Math.floor((difference % (1000 * 60)) / 1000); 
let milliseconds = Math.floor((difference % 1000) / 10); 
minutes = (minutes < 10) ? '0' + minutes : minutes; seconds = (seconds < 10) ? '0' + seconds : seconds; milliseconds = (milliseconds < 10) ? '0' + milliseconds : milliseconds; 
display.textContent = `${minutes}:${seconds}:${milliseconds}`;
}
